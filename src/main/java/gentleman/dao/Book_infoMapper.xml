<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gentleman.dao.Book_infoMapper">
  <resultMap id="BaseResultMap" type="gentleman.bean.Book_info">
    <id column="book_id" jdbcType="BIGINT" property="bookId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="publish" jdbcType="VARCHAR" property="publish" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="pubdate" jdbcType="DATE" property="pubdate" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="pressmark" jdbcType="INTEGER" property="pressmark" />
    <result column="state" jdbcType="SMALLINT" property="state" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="gentleman.bean.Book_info">
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, name, author, publish, ISBN, language, price, pubdate, class_id, pressmark, 
    state
  </sql>
  <sql id="Blob_Column_List">
    introduction
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="gentleman.bean.Book_infoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="gentleman.bean.Book_infoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_info
    where book_id = #{bookId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book_info
    where book_id = #{bookId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="gentleman.bean.Book_infoExample">
    delete from book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="gentleman.bean.Book_info">
    insert into book_info (
    book_id, name,author,publish,ISBN,introduction, language, price, pubdate, class_id, pressmark,state
      )
    values (#{bookId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
      #{publish,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR},#{introduction,jdbcType=LONGVARCHAR},
      #{language,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL},
      #{pubdate,jdbcType=DATE}, #{classId,jdbcType=INTEGER},
      #{pressmark,jdbcType=INTEGER}, #{state,jdbcType=SMALLINT}
      )
  </insert>

  <insert id="insertSelective" parameterType="gentleman.bean.Book_info">
    insert into book_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="publish != null">
        publish,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="pubdate != null">
        pubdate,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="pressmark != null">
        pressmark,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="pubdate != null">
        #{pubdate,jdbcType=DATE},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="pressmark != null">
        #{pressmark,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=SMALLINT},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="gentleman.bean.Book_infoExample" resultType="java.lang.Long">
    select count(*) from book_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_info
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publish != null">
        publish = #{record.publish,jdbcType=VARCHAR},
      </if>
      <if test="record.isbn != null">
        ISBN = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.pubdate != null">
        pubdate = #{record.pubdate,jdbcType=DATE},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.pressmark != null">
        pressmark = #{record.pressmark,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=SMALLINT},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update book_info
    set book_id = #{record.bookId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      publish = #{record.publish,jdbcType=VARCHAR},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      language = #{record.language,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      pubdate = #{record.pubdate,jdbcType=DATE},
      class_id = #{record.classId,jdbcType=INTEGER},
      pressmark = #{record.pressmark,jdbcType=INTEGER},
      state = #{record.state,jdbcType=SMALLINT},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_info
    set book_id = #{record.bookId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      publish = #{record.publish,jdbcType=VARCHAR},
      ISBN = #{record.isbn,jdbcType=VARCHAR},
      language = #{record.language,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      pubdate = #{record.pubdate,jdbcType=DATE},
      class_id = #{record.classId,jdbcType=INTEGER},
      pressmark = #{record.pressmark,jdbcType=INTEGER},
      state = #{record.state,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="gentleman.bean.Book_info">
    update book_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publish != null">
        publish = #{publish,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="pubdate != null">
        pubdate = #{pubdate,jdbcType=DATE},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="pressmark != null">
        pressmark = #{pressmark,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=SMALLINT},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="gentleman.bean.Book_info">
    update book_info
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publish = #{publish,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      pubdate = #{pubdate,jdbcType=DATE},
      class_id = #{classId,jdbcType=INTEGER},
      pressmark = #{pressmark,jdbcType=INTEGER},
      state = #{state,jdbcType=SMALLINT},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="gentleman.bean.Book_info">
    update book_info
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publish = #{publish,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      pubdate = #{pubdate,jdbcType=DATE},
      class_id = #{classId,jdbcType=INTEGER},
      pressmark = #{pressmark,jdbcType=INTEGER},
      state = #{state,jdbcType=SMALLINT}
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>

  <select id="selectAllBook_info" parameterType="gentleman.bean.Book_infoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_info
  </select>

</mapper>