<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gentleman.dao.reader_infoMapper">
  <resultMap id="BaseResultMap" type="gentleman.bean.reader_info">
    <id column="reader_id" jdbcType="INTEGER" property="readerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="telcode" jdbcType="VARCHAR" property="telcode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reader_id, name, sex, birth, address, telcode
  </sql>
  <select id="selectByExample" parameterType="gentleman.bean.reader_infoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reader_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reader_info
    where reader_id = #{readerId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reader_info
    where reader_id = #{readerId,jdbcType=INTEGER}
  </delete>


  <delete id="deleteByExample" parameterType="gentleman.bean.reader_infoExample">
    delete from reader_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>


  <insert id="insert" parameterType="gentleman.bean.reader_info">
    insert into reader_info (reader_id, name, sex, 
      birth, address, telcode
      )
    values (#{readerId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birth,jdbcType=DATE}, #{address,jdbcType=VARCHAR}, #{telcode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="gentleman.bean.reader_info">
    insert into reader_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="telcode != null">
        telcode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="telcode != null">
        #{telcode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="gentleman.bean.reader_infoExample" resultType="java.lang.Long">
    select count(*) from reader_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reader_info
    <set>
      <if test="record.readerId != null">
        reader_id = #{record.readerId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.telcode != null">
        telcode = #{record.telcode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reader_info
    set reader_id = #{record.readerId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birth = #{record.birth,jdbcType=DATE},
      address = #{record.address,jdbcType=VARCHAR},
      telcode = #{record.telcode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="gentleman.bean.reader_info">
    update reader_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="telcode != null">
        telcode = #{telcode,jdbcType=VARCHAR},
      </if>
    </set>
    where reader_id = #{readerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="gentleman.bean.reader_info">
    update reader_info
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=DATE},
      address = #{address,jdbcType=VARCHAR},
      telcode = #{telcode,jdbcType=VARCHAR}
    where reader_id = #{readerId,jdbcType=INTEGER}
  </update>

    <select id="selectAllreader_info" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from reader_info
  </select>


</mapper>